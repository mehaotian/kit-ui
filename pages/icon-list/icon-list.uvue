<template>
	<!-- #ifdef APP -->
	<scroll-view style="flex:1;height: 2000px;">
	<!-- #endif -->
		<view class="page">
			<view class="page-header">
				<text class="page-title">k-icon 图标组件</text>
				<text class="page-desc">轻量、扩展方便、用法简单的图标组件</text>
			</view>

			<view class="section">
				<text class="section-title">完整示例</text>
				<view class="demo-content demo-row">
					<view v-for="(item,index) in allFillIcons" :key="index" class="icon-demo-item">
						<k-icon :name="item" size="24" @click="handleIconClick(item)" />
					</view>
				</view>
			</view>

		</view>
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->
</template>

<script setup lang="uts">
	import { ref, reactive } from 'vue'
	import { getAllIconNames } from '@/uni_modules/kit-ui/components/k-icon/fonts/k-icon.uts'

	// 响应式数据
	const isLoading = ref(false)
	const clickResult = ref('点击图标查看效果')
	const allFillIcons = reactive(getAllIconNames())

	function toggleLoading() {
		isLoading.value = !isLoading.value
		setTimeout(() => {
			isLoading.value = false
		}, 2000)
	}

	function handleIconClick(name : string) {
		uni.setClipboardData({
			data: name,
			showToast: true
		})
		console.log(name)
	}
</script>

<style lang="scss" scoped>
	.icon-demo-item {
		display: flex;
		align-items: center;
		align-items: center;
		width: 10%;
		height: 40px;
	}

	.demo-desc {
		font-size: 12px;
		color: var(--k-color-text-secondary, #909399);
		margin-top: 8px;
	}

	.click-result {
		font-size: 14px;
		color: var(--k-color-text-secondary, #606266);
		margin-top: 8px;
	}

	// 自定义字体示例 (实际使用时需要引入真实字体文件)
	.custom-font {
		font-family: 'custom-icons', sans-serif;
	}
</style>