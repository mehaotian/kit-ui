<template>
	<!-- #ifdef APP -->
	<scroll-view style="flex: 1;">
	<!-- #endif -->
		<view class="page">
			<view class="page-header">
				<k-text size="24" weight="bold" align="center">k-collapse-item 折叠面板</k-text>
				<k-text class="page-desc" size="14" align="center">可以折叠/展开的内容区域</k-text>
			</view>

			<!-- <view class="section">
				<view class="section-title">
					<k-text size="16">基础用法</k-text>
				</view>
				<view class="demo-content">
					<k-collapse-item title="这是一个折叠面板" :expanded="basicExpanded" @change="onBasicChange">
						<k-text>这里是折叠面板的内容。可以放置任意的内容，包括文字、图片、其他组件等。当点击标题时，内容会展开或收起。</k-text>
					</k-collapse-item>
				</view>
			</view>

			<view class="section">
				<view class="section-title">
					<k-text size="16">默认展开</k-text>
					<k-text class="demo-desc" size="12" color="#999">通过 expanded 属性控制默认展开状态</k-text>
				</view>
				<view class="demo-content">
					<k-collapse-item title="默认展开的面板" :expanded="true">
						<k-text>这个面板默认是展开状态。你可以通过设置 expanded 属性为 true 来实现默认展开。</k-text>
					</k-collapse-item>
				</view>
			</view>

			<view class="section">
				<view class="section-title">
					<k-text size="16">禁用状态</k-text>
					<k-text class="demo-desc" size="12" color="#999">通过 disabled 属性禁用折叠面板</k-text>
				</view>
				<view class="demo-content">
					<k-collapse-item title="禁用的折叠面板" :disabled="true">
						<k-text>这个面板被禁用了，无法点击展开或收起。</k-text>
					</k-collapse-item>
				</view>
			</view>

			<view class="section">
				<view class="section-title">
					<k-text size="16">自定义图标位置</k-text>
					<k-text class="demo-desc" size="12" color="#999">通过 icon-position 属性设置图标位置</k-text>
				</view>
				<view class="demo-content">
					<k-collapse-item title="图标在左侧" icon-position="left" :expanded="leftIconExpanded" @change="onLeftIconChange">
						<k-text>这个面板的图标位置在左侧。</k-text>
					</k-collapse-item>
					<view class="demo-gap"></view>
					<k-collapse-item title="图标在右侧" icon-position="right" :expanded="rightIconExpanded" @change="onRightIconChange">
						<k-text>这个面板的图标位置在右侧（默认）。</k-text>
					</k-collapse-item>
				</view>
			</view>

			<view class="section">
				<view class="section-title">
					<k-text size="16">自定义标题</k-text>
					<k-text class="demo-desc" size="12" color="#999">通过 title 插槽自定义标题内容</k-text>
				</view>
				<view class="demo-content">
					<k-collapse-item :expanded="customTitleExpanded" @change="onCustomTitleChange">
						<template #title>
							<k-cell title='自定义标题' label="测试标题" right-text="点击切换" custom-style="padding-right:0;">
								<template #icon>
									<k-image shape="round" class="image-icon"  src="https://picsum.photos/200/200?random=1" width="35px" height="35px"></k-image>
								</template>
							</k-cell>
						</template>
						<k-text>这里使用了自定义的标题插槽，可以添加图标、徽章等元素。</k-text>
					</k-collapse-item>
				</view>
			</view> -->

			<view class="section">
				<view class="section-title">
					<k-text size="16">手风琴模式</k-text>
					<k-text class="demo-desc" size="12" color="#999">同时只允许打开一个</k-text>
				</view>
				<view class="demo-content">
					<!-- accordion accordion-->
					<k-collapse v-model:list="value">
						<!-- :name="index" -->
						<k-collapse-item v-for="(item, index) in collapseList" :name="item.name" :key="index" :expanded="item.expanded" :title="item.title" @change="onCollapseChange(index, $event)">
							<!-- <text class="collapse-text">{{ item.content }}</text> -->
							<k-text>{{item.name}}{{item.content}}</k-text>
						</k-collapse-item>
					</k-collapse>
				</view>
			</view>
		</view>
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->
</template>

<script setup lang="uts">
	import { ref } from 'vue'
	let value = ref(['1', '2', '3'])
	// 基础用法状态
	const basicExpanded = ref(false)
	const onBasicChange = (expanded : boolean) => {
		basicExpanded.value = expanded
		console.log('基础面板状态:', expanded)
	}

	// 图标位置状态
	const leftIconExpanded = ref(false)
	const rightIconExpanded = ref(false)
	const onLeftIconChange = (expanded : boolean) => {
		leftIconExpanded.value = expanded
	}
	const onRightIconChange = (expanded : boolean) => {
		rightIconExpanded.value = expanded
	}

	// 自定义标题状态
	const customTitleExpanded = ref(false)
	const onCustomTitleChange = (expanded : boolean) => {
		customTitleExpanded.value = expanded
	}

	// 多个面板数据
	type CollapseItem = {
		name : string
		title : string
		content : string
		expanded : boolean
	}

	const collapseList = ref<CollapseItem[]>([
		{
			name: '1',
			title: '面板 1',
			content: '这是第一个面板的内容，包含一些基础信息和说明文字。',
			expanded: false
		},
		{
			name: '2',
			title: '面板 2',
			content: '这是第二个面板的内容，展示了更多详细的功能介绍。',
			expanded: true
		},
		{
			name: '3',
			title: '面板 3',
			content: '这是第三个面板的内容，提供了额外的配置选项和使用说明。',
			expanded: false
		}
	])

	const onCollapseChange = (index : number, expanded : boolean) => {
		collapseList.value[index].expanded = expanded
		console.log(`面板 ${index + 1} 状态:`, expanded)
	}

	// 动画时长状态
	const fastExpanded = ref(false)
	const slowExpanded = ref(false)
	const onFastChange = (expanded : boolean) => {
		fastExpanded.value = expanded
	}
	const onSlowChange = (expanded : boolean) => {
		slowExpanded.value = expanded
	}
</script>

<style>
	.demo-content {
		padding: 0;
		background: none;
		/* border-radius: 0; */

	}

	.custom-title {
		display: flex;
		align-items: center;
		flex-direction: row;
	}

	.custom-title-text {
		font-size: 16px;
		color: #333;
		font-weight: bold;
		margin-right: 8px;
	}

	.custom-badge {
		background-color: #ff4757;
		border-radius: 10px;
		padding: 2px 6px;
	}

	.custom-badge-text {
		font-size: 10px;
		color: #fff;
		font-weight: bold;
	}
</style>