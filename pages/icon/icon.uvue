<template>
	<scroll-view class="page" scroll-y>
		<view class="page-header">
			<text class="page-title">k-icon 图标组件</text>
			<text class="page-desc">轻量、扩展方便、用法简单的图标组件</text>
		</view>
		
		<!-- 基础用法 -->
		<view class="section">
			<text class="section-title">基础用法</text>
			<view class="demo-row">
				<k-icon name="translate" size="24" />
			
			</view>
		</view>
		
	</scroll-view>
</template>

<script setup lang="uts">
import { ref } from 'vue'

// 响应式数据
const isLoading = ref(false)
const clickResult = ref('点击图标查看效果')

// 方法
function toggleLoading() {
	isLoading.value = !isLoading.value
	setTimeout(() => {
		isLoading.value = false
	}, 2000)
}

function handleIconClick(iconName: string) {
	clickResult.value = `点击了 ${iconName} 图标 - ${new Date().toLocaleTimeString()}`
}
</script>

<style lang="scss">
.page {
	flex: 1;
	background-color: var(--k-color-background, #f8f9fa);
}

.page-header {
	padding: 20px;
	background-color: var(--k-color-white, #ffffff);
	border-bottom: 1px solid var(--k-color-border, #ebeef5);
	margin-bottom: 12px;
}

.page-title {
	font-size: 24px;
	font-weight: 600;
	color: var(--k-color-text-primary, #303133);
	display: block;
	margin-bottom: 8px;
}

.page-desc {
	font-size: 14px;
	color: var(--k-color-text-secondary, #606266);
	display: block;
}

.section {
	margin-bottom: 12px;
	background-color: var(--k-color-white, #ffffff);
	border-radius: var(--k-border-radius-base, 8px);
	padding: 16px;
}

.section-title {
	font-size: 16px;
	font-weight: 500;
	color: var(--k-color-text-primary, #303133);
	display: block;
	margin-bottom: 12px;
}

.demo-row {
	display: flex;
	align-items: center;
	gap: 16px;
	margin-bottom: 8px;
	flex-wrap: wrap;
}

.demo-desc {
	font-size: 12px;
	color: var(--k-color-text-secondary, #909399);
	margin-top: 8px;
	display: block;
}

.click-result {
	font-size: 14px;
	color: var(--k-color-text-secondary, #606266);
	margin-top: 8px;
	display: block;
}

// 自定义字体示例 (实际使用时需要引入真实字体文件)
.custom-font {
	font-family: 'custom-icons', sans-serif;
}
</style>
