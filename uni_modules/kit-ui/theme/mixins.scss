/**
 * kit-ui 样式混合器
 * 提供常用的样式混合器和工具函数
 */

@import './variables.scss';

/* ==================== 基础混合器 ==================== */

/**
 * 清除浮动
 */
@mixin k-clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

/**
 * 文本省略
 * @param {Number} $lines - 行数，默认为1
 */
@mixin k-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

/**
 * 绝对居中
 */
@mixin k-center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/**
 * Flex 居中
 */
@mixin k-center-flex {
  display: flex;
  align-items: center;
  justify-content: center;
}

/**
 * 响应式断点
 * @param {String} $breakpoint - 断点名称
 */
@mixin k-respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: 575px) { @content; }
  }
  @if $breakpoint == 'sm' {
    @media (min-width: 576px) { @content; }
  }
  @if $breakpoint == 'md' {
    @media (min-width: 768px) { @content; }
  }
  @if $breakpoint == 'lg' {
    @media (min-width: 992px) { @content; }
  }
  @if $breakpoint == 'xl' {
    @media (min-width: 1200px) { @content; }
  }
}

/* ==================== 组件混合器 ==================== */

/**
 * 按钮基础样式
 * @param {Color} $bg-color - 背景颜色
 * @param {Color} $text-color - 文字颜色
 * @param {Color} $border-color - 边框颜色
 */
@mixin k-button-variant($bg-color, $text-color, $border-color: $bg-color) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $border-color;
  
  &:hover {
    background-color: lighten($bg-color, 10%);
    border-color: lighten($border-color, 10%);
  }
  
  &:active {
    background-color: darken($bg-color, 5%);
    border-color: darken($border-color, 5%);
  }
  
  &.k-button--disabled {
    background-color: $k-bg-color-disabled;
    color: $k-text-color-disabled;
    border-color: $k-border-color;
    cursor: not-allowed;
  }
}

/**
 * 按钮尺寸
 * @param {Number} $height - 高度
 * @param {Number} $padding - 左右内边距
 * @param {Number} $font-size - 字体大小
 */
@mixin k-button-size($height, $padding, $font-size) {
  height: $height;
  padding: 0 $padding;
  font-size: $font-size;
  line-height: $height;
}

/**
 * 输入框基础样式
 */
@mixin k-input-base {
  width: 100%;
  padding: $k-spacing-sm $k-spacing-base;
  font-size: $k-font-size-base;
  line-height: $k-line-height-base;
  color: $k-text-color-primary;
  background-color: $k-bg-color;
  border: $k-border-width-base solid $k-border-color;
  border-radius: $k-border-radius-base;
  transition: $k-transition-all;
  
  &:focus {
    outline: none;
    border-color: $k-color-primary;
    box-shadow: 0 0 0 2px rgba($k-color-primary, 0.2);
  }
  
  &::placeholder {
    color: $k-text-color-placeholder;
  }
  
  &:disabled {
    background-color: $k-bg-color-disabled;
    color: $k-text-color-disabled;
    cursor: not-allowed;
  }
}

/**
 * 卡片阴影
 * @param {String} $level - 阴影级别 (light, base, dark)
 */
@mixin k-card-shadow($level: 'base') {
  @if $level == 'light' {
    box-shadow: $k-box-shadow-light;
  } @else if $level == 'base' {
    box-shadow: $k-box-shadow-base;
  } @else if $level == 'dark' {
    box-shadow: $k-box-shadow-dark;
  }
}

/**
 * 滚动条样式
 */
@mixin k-scrollbar {
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  &::-webkit-scrollbar-thumb {
    background-color: $k-color-gray-400;
    border-radius: $k-border-radius-base;
    
    &:hover {
      background-color: $k-color-gray-500;
    }
  }
  
  &::-webkit-scrollbar-track {
    background-color: $k-color-gray-100;
  }
}

/* ==================== 动画混合器 ==================== */

/**
 * 淡入动画
 */
// @mixin k-fade-in {
//   animation: k-fade-in $k-transition-duration-base $k-transition-timing-function-ease-out;
// }

// @keyframes k-fade-in {
//   0% {
//     opacity: 0;
//   }
//   100% {
//     opacity: 1;
//   }
// }

/**
 * 滑入动画
 * @param {String} $direction - 方向 (up, down, left, right)
 */
// @mixin k-slide-in($direction: 'up') {
//   animation: k-slide-in-#{$direction} $k-transition-duration-base $k-transition-timing-function-ease-out;
// }

// @keyframes k-slide-in-up {
//   0% {
//     transform: translateY(100%);
//     opacity: 0;
//   }
//   100% {
//     transform: translateY(0);
//     opacity: 1;
//   }
// }

// @keyframes k-slide-in-down {
//   0% {
//     transform: translateY(-100%);
//     opacity: 0;
//   }
//   100% {
//     transform: translateY(0);
//     opacity: 1;
//   }
// }

// @keyframes k-slide-in-left {
//   0% {
//     transform: translateX(-100%);
//     opacity: 0;
//   }
//   100% {
//     transform: translateX(0);
//     opacity: 1;
//   }
// }

// @keyframes k-slide-in-right {
//   0% {
//     transform: translateX(100%);
//     opacity: 0;
//   }
//   100% {
//     transform: translateX(0);
//     opacity: 1;
//   }
// }

/**
 * 缩放动画
 */
// @mixin k-scale-in {
//   animation: k-scale-in $k-transition-duration-base $k-transition-timing-function-ease-out;
// }

// @keyframes k-scale-in {
//   0% {
//     transform: scale(0.8);
//     opacity: 0;
//   }
//   100% {
//     transform: scale(1);
//     opacity: 1;
//   }
// }

/* ==================== 工具混合器 ==================== */

/**
 * 隐藏元素但保持可访问性
 */
@mixin k-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/**
 * 重置按钮样式
 */
@mixin k-button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

/**
 * 重置列表样式
 */
@mixin k-list-reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

/**
 * 1px 边框解决方案（解决移动端 1px 边框问题）
 * @param {String} $position - 位置 (top, bottom, left, right, all)
 * @param {Color} $color - 边框颜色
 */
@mixin k-hairline($position: 'all', $color: $k-border-color) {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    background-color: $color;
    
    @if $position == 'top' {
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      transform: scaleY(0.5);
    } @else if $position == 'bottom' {
      bottom: 0;
      left: 0;
      right: 0;
      height: 1px;
      transform: scaleY(0.5);
    } @else if $position == 'left' {
      top: 0;
      left: 0;
      bottom: 0;
      width: 1px;
      transform: scaleX(0.5);
    } @else if $position == 'right' {
      top: 0;
      right: 0;
      bottom: 0;
      width: 1px;
      transform: scaleX(0.5);
    } @else if $position == 'all' {
      top: 0;
      left: 0;
      width: 200%;
      height: 200%;
      border: 1px solid $color;
      border-radius: $k-border-radius-base * 2;
      transform: scale(0.5);
      transform-origin: 0 0;
    }
  }
}

/**
 * 暗色主题适配
 */
@mixin k-dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
  
  .k-theme-dark & {
    @content;
  }
}

/* ==================== 新设计系统混合器 ==================== */

/**
 * 渐变背景混合器
 * @param {String} $type - 渐变类型 (primary, success, warning, error, info)
 */
@mixin k-gradient-bg($type: 'primary') {
  @if $type == 'primary' {
    background: $k-gradient-primary;
  } @else if $type == 'success' {
    background: $k-gradient-success;
  } @else if $type == 'warning' {
    background: $k-gradient-warning;
  } @else if $type == 'error' {
    background: $k-gradient-error;
  } @else if $type == 'info' {
    background: $k-gradient-info;
  }
}

/**
 * 新拟态效果混合器
 * @param {String} $type - 效果类型 (raised, inset, flat)
 * @param {Color} $bg-color - 背景颜色
 */
@mixin k-neumorphism($type: 'raised', $bg-color: $k-bg-color) {
  background-color: $bg-color;
  
  @if $type == 'raised' {
    box-shadow: $k-shadow-neumorphism-raised;
  } @else if $type == 'inset' {
    box-shadow: $k-shadow-neumorphism-inset;
  } @else if $type == 'flat' {
    box-shadow: $k-shadow-neumorphism-flat;
  }
  
  @include k-dark-mode {
    @if $type == 'raised' {
      box-shadow: $k-dark-shadow-neumorphism-raised;
    } @else if $type == 'inset' {
      box-shadow: $k-dark-shadow-neumorphism-inset;
    } @else if $type == 'flat' {
      box-shadow: $k-dark-shadow-neumorphism-flat;
    }
  }
}

/**
 * 彩色阴影混合器
 * @param {String} $type - 阴影类型 (primary, success, warning, error)
 */
@mixin k-colored-shadow($type: 'primary') {
  @if $type == 'primary' {
    box-shadow: $k-shadow-primary;
  } @else if $type == 'success' {
    box-shadow: $k-shadow-success;
  } @else if $type == 'warning' {
    box-shadow: $k-shadow-warning;
  } @else if $type == 'error' {
    box-shadow: $k-shadow-error;
  }
}

/**
 * 呼吸感动画混合器
 */
// @mixin k-breathing-animation {
//   animation: k-breathing 2s ease-in-out infinite;
// }

// @keyframes k-breathing {
//   0%, 100% {
//     transform: scale(1);
//     opacity: 1;
//   }
//   50% {
//     transform: scale(1.02);
//     opacity: 0.95;
//   }
// }

// /**
//  * 流动渐变动画混合器
//  */
// @mixin k-flowing-gradient($type: 'primary') {
//   background-size: 200% 200%;
//   animation: k-flowing-gradient 3s ease infinite;
  
//   @include k-gradient-bg($type);
// }

// @keyframes k-flowing-gradient {
//   0% {
//     background-position: 0% 50%;
//   }
//   50% {
//     background-position: 100% 50%;
//   }
//   100% {
//     background-position: 0% 50%;
//   }
// }

/**
 * 柔和悬停效果混合器
 */
@mixin k-soft-hover {
  transition: all $k-transition-duration-base $k-transition-timing-function-ease-in-out;
  
  &:hover {
    background-color: var(--k-bg-color-hover);
    transform: translateY(-1px);
    box-shadow: $k-box-shadow-md;
  }
  
  &:active {
    background-color: var(--k-bg-color-active);
    transform: translateY(0);
    box-shadow: $k-box-shadow-sm;
  }
}