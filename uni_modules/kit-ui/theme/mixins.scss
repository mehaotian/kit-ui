/**
 * kit-ui 样式混合器
 * 提供常用的样式混合器和工具函数
 */

@import './variables.scss';

/* ==================== 基础混合器 ==================== */

/**
 * 绝对居中
 */
@mixin k-center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/**
 * Flex 居中
 */
@mixin k-center-flex {
  display: flex;
  align-items: center;
  justify-content: center;
}

/**
 * 响应式断点
 * @param {String} $breakpoint - 断点名称
 */
@mixin k-respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: 575px) { @content; }
  }
  @if $breakpoint == 'sm' {
    @media (min-width: 576px) { @content; }
  }
  @if $breakpoint == 'md' {
    @media (min-width: 768px) { @content; }
  }
  @if $breakpoint == 'lg' {
    @media (min-width: 992px) { @content; }
  }
  @if $breakpoint == 'xl' {
    @media (min-width: 1200px) { @content; }
  }
}

/* ==================== 工具混合器 ==================== */

/**
 * 隐藏元素但保持可访问性
 */
@mixin k-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}


/* ==================== 新设计系统混合器 ==================== */

/**
 * 渐变背景混合器
 * @param {String} $type - 渐变类型 (primary, success, warning, error, info)
 */
@mixin k-gradient-bg($type: 'primary') {
  @if $type == 'primary' {
    background: $k-gradient-primary;
  } @else if $type == 'success' {
    background: $k-gradient-success;
  } @else if $type == 'warning' {
    background: $k-gradient-warning;
  } @else if $type == 'error' {
    background: $k-gradient-error;
  } @else if $type == 'info' {
    background: $k-gradient-info;
  }
}

/**
 * 新拟态效果混合器
 * @param {String} $type - 效果类型 (raised, inset, flat)
 * @param {Color} $bg-color - 背景颜色
 */
@mixin k-neumorphism($type: 'raised', $bg-color: $k-bg-color) {
  background-color: $bg-color;
  
  @if $type == 'raised' {
    box-shadow: $k-shadow-neumorphism-raised;
  } @else if $type == 'inset' {
    box-shadow: $k-shadow-neumorphism-inset;
  } @else if $type == 'flat' {
    box-shadow: $k-shadow-neumorphism-flat;
  }
  
  @include k-dark-mode {
    @if $type == 'raised' {
      box-shadow: $k-dark-shadow-neumorphism-raised;
    } @else if $type == 'inset' {
      box-shadow: $k-dark-shadow-neumorphism-inset;
    } @else if $type == 'flat' {
      box-shadow: $k-dark-shadow-neumorphism-flat;
    }
  }
}

/**
 * 彩色阴影混合器
 * @param {String} $type - 阴影类型 (primary, success, warning, error)
 */
@mixin k-colored-shadow($type: 'primary') {
  @if $type == 'primary' {
    box-shadow: $k-shadow-primary;
  } @else if $type == 'success' {
    box-shadow: $k-shadow-success;
  } @else if $type == 'warning' {
    box-shadow: $k-shadow-warning;
  } @else if $type == 'error' {
    box-shadow: $k-shadow-error;
  }
}